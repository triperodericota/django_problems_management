# Generated by Django 3.0.5 on 2020-04-11 17:43

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProblemResolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_0', models.DateField(default=datetime.date(2020, 4, 11), verbose_name='Date')),
                ('solution_code', models.TextField(verbose_name='Solution')),
                ('big_oh', models.CharField(choices=[('constant', 'C'), ('logarithmic', 'log'), ('logarithmic', 'log'), ('linear', 'N'), ('logarithmicN', 'logN'), ('quadratic', 'N^2'), ('cubic', 'N^3')], max_length=20, verbose_name='Time complexity(big-oh)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Approach')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('array', 'Array'), ('hash table', 'Hash Table'), ('Linked list', 'Linked list'), ('math', 'Math'), ('two pointers', 'Two Pointers'), ('string', 'String'), ('binary search', 'Binary Search'), ('divide and coquer', 'Divide and coquer'), ('dynamic programming', 'Dynamic Programming'), ('backtracking', 'Backtracking'), ('Stack', 'stack'), ('heap', 'Heap'), ('greedy', 'Greedy'), ('sort', 'Sort'), ('bit manipulation', 'Bit Manipulation'), ('tree', 'Tree'), ('depth first search', 'DFS'), ('breadth first search', 'BFS'), ('union find', 'Union Find'), ('graph', 'Graph'), ('design', 'Design'), ('tpological sort', 'Topological Sort'), ('trie', 'Trie'), ('binary search tree', 'Binary search tree'), ('queue', 'Queue')], max_length=20, unique=True, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceptance', models.IntegerField()),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('url', models.CharField(blank=True, max_length=80, null=True, verbose_name='URL')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=10, verbose_name='Difficulty')),
                ('description', models.TextField(verbose_name='Description')),
                ('resolution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.ProblemResolution')),
                ('tags', models.ManyToManyField(to='app.Tag')),
            ],
        ),
    ]
